=> rune
    is a data type that is a unique integer value that corresponds to a character in the Unicode standard.  used when working with individual characters within a string. is an alias for the int32 type
    
    Declare and initialize a string containing a Unicode character
    smiley := "ðŸ˜ƒ"

    Converting a string to a slice of runes
    runes := []rune(smiley)

    Character-level operations
    firstRune := runes[0]
    isDigit := unicode.IsDigit(firstRune)

    Printing
    fmt.Println(smiley)     // Output: ðŸ˜ƒ
    fmt.Println(runes)      // Output: [128515]
    fmt.Println(isDigit)    // Output: false

=> go fmt
    - go fmt - primarily handles the formatting of Go source code, ensuring that it adheres to the official Go style guidelines.
    - vs code inbuilt formatter uses go fmt indirectly (using go pls) to format the code. 

=> mod history
    - https://www.bytesizego.com/blog/history-of-dependency-management-go Well explained. 
    - go get vs go install
        - 
=> rune
    is a data type that is a unique integer value that corresponds to a character in the Unicode standard.  used when working with individual characters within a string. is an alias for the int32 type
    
    Declare and initialize a string containing a Unicode character
    smiley := "ðŸ˜ƒ"

    Converting a string to a slice of runes
    runes := []rune(smiley)

    Character-level operations
    firstRune := runes[0]
    isDigit := unicode.IsDigit(firstRune)

    Printing
    fmt.Println(smiley)     // Output: ðŸ˜ƒ
    fmt.Println(runes)      // Output: [128515]
    fmt.Println(isDigit)    // Output: false

=> go fmt
    - go fmt - primarily handles the formatting of Go source code, ensuring that it adheres to the official Go style guidelines.
    - vs code inbuilt formatter uses go fmt indirectly (using go pls) to format the code. 

=> mod history
    - https://www.bytesizego.com/blog/history-of-dependency-management-go Well explained. 
    - go get vs go install
        - executables refer specifically to Go command-line tools or binaries that are installed and can be run directly as standalone programs.
        - Now see https://go.dev/doc/go-get-install-deprecation
        - We use go get for the packages/dependency. 
        - For executables we should use go install

        - Since modules were introduced, the go get command has been used both to update dependencies in go.mod and to install commands. This combination is frequently confusing and inconvenient: in most cases, developers want to update a dependency or install a command but not both at the same time.

        - Since Go 1.16, go install can install a command at a version specified on the command line while ignoring the go.mod file in the current directory (if one exists). go install should now be used to install commands in most cases.

        - go getâ€™s ability to build and install commands is now deprecated, since that functionality is redundant with go install. Removing this functionality will make go get faster, since it wonâ€™t compile or link packages by default. go get also wonâ€™t report an error when updating a package that canâ€™t be built for the current platform.